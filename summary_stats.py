import statistics as stats
import numpy as np

# mean
Jitter_sample_percentage = [0.427, 0.844, 1.264, 2.877, 4.052, 2.7, 2.619, 3.457, 2.664, 3.531, 4.162, 3.34, 3.3671, 3.314,
                 2.026, 3.09, 4.51, 4.48, 1.207, 3.094, 3.017, 1.424, 2.569, 1.037, 2.716, 1.797]
Jitter_sample_microseconds = [0.00003446, 0.000068985, 0.000100503, 0.000244132, 0.00031326, 0.000222142, 0.000222234,
                              0.000289743, 0.000226138, 0.000297458, 0.00034749, 0.000255601, 0.000247864, 0.00016664, 0.000246105,
                              0.000350085, 0.000331485, 0.000096794, 0.000237371, 0.000240587, 0.000112419, 0.000191173, 0.000077507,
                              0.000205043, 0.000151423]
x_bar = stats.mean(Jitter_sample_percentage)
x_bar = stats.mean(Jitter_sample_microseconds)
print("Mean:", x_bar)

# median
sample = [0.427, 0.844, 1.264, 2.877, 4.052, 2.7, 2.619, 3.457, 2.664, 3.531, 4.162, 3.34, 3.3671, 3.314,
                 2.026, 3.09, 4.51, 4.48, 1.207, 3.094, 3.017, 1.424, 2.569, 1.037, 2.716, 1.797]
sample_microseconds = [0.00003446, 0.000068985, 0.000100503, 0.000244132, 0.00031326, 0.000222142, 0.000222234,
                              0.000289743, 0.000226138, 0.000297458, 0.00034749, 0.000255601, 0.000247864, 0.00016664, 0.000246105,
                              0.000350085, 0.000331485, 0.000096794, 0.000237371, 0.000240587, 0.000112419, 0.000191173, 0.000077507,
                              0.000205043, 0.000151423]
median = stats.median(sample)
median = stats.median(sample_microseconds)
print("Median: %.2f" % median)
print("Median: %.2f" % median)

# mode
sample = [0.427, 0.844, 1.264, 2.877, 4.052, 2.7, 2.619, 3.457, 2.664, 3.531, 4.162, 3.34, 3.3671, 3.314,
                 2.026, 3.09, 4.51, 4.48, 1.207, 3.094, 3.017, 1.424, 2.569, 1.037, 2.716, 1.797]
mode = stats.mode(sample)
print("Mode value: %d" % mode)
sample_microseconds = [0.00003446, 0.000068985, 0.000100503, 0.000244132, 0.00031326, 0.000222142, 0.000222234,
                              0.000289743, 0.000226138, 0.000297458, 0.00034749, 0.000255601, 0.000247864, 0.00016664, 0.000246105,
                              0.000350085, 0.000331485, 0.000096794, 0.000237371, 0.000240587, 0.000112419, 0.000191173, 0.000077507,
                              0.000205043, 0.000151423]
mode = stats.mode(sample_microseconds)

print("Mode value: %d" % mode)


# range
sample = [0.427, 0.844, 1.264, 2.877, 4.052, 2.7, 2.619, 3.457, 2.664, 3.531, 4.162, 3.34, 3.3671, 3.314,
                 2.026, 3.09, 4.51, 4.48, 1.207, 3.094, 3.017, 1.424, 2.569, 1.037, 2.716, 1.797]
the_range = np.max(sample) - np.min(sample)
print("Range: %d" % the_range)
sample_microseconds = [0.00003446, 0.000068985, 0.000100503, 0.000244132, 0.00031326, 0.000222142, 0.000222234,
                              0.000289743, 0.000226138, 0.000297458, 0.00034749, 0.000255601, 0.000247864, 0.00016664, 0.000246105,
                              0.000350085, 0.000331485, 0.000096794, 0.000237371, 0.000240587, 0.000112419, 0.000191173, 0.000077507,
                              0.000205043, 0.000151423]
the_range = np.max(sample_microseconds) - np.min(sample_microseconds)
print("Range: %d" % the_range)

# sample and population variance
sample = np.array([0.427, 0.844, 1.264, 2.877, 4.052, 2.7, 2.619, 3.457, 2.664, 3.531, 4.162, 3.34, 3.3671, 3.314,
                 2.026, 3.09, 4.51, 4.48, 1.207, 3.094, 3.017, 1.424, 2.569, 1.037, 2.716, 1.797])
s_square = sample.var(ddof=1)
sigma_square = sample.var()
print("Sample variance: %.2f. Population variance: %.2f." % (s_square, sigma_square))

# sample and population standard deviation
s = sample.std(ddof=1)
sigma = sample.std()
print("Sample std. dev.: %.2f. Population std. dev.: %.2f." % (s, sigma))

# iqr and percentiles
sample = [0.427, 0.844, 1.264, 2.877, 4.052, 2.7, 2.619, 3.457, 2.664, 3.531, 4.162, 3.34, 3.3671, 3.314,
                 2.026, 3.09, 4.51, 4.48, 1.207, 3.094, 3.017, 1.424, 2.569, 1.037, 2.716, 1.797]
pct25 = np.percentile(sample, 25)
pct75 = np.percentile(sample, 75)
iqr = pct75 - pct25
print("IQR: %d. 25th percentile: %d. 75th percentile: %d" % (iqr, pct25, pct75))
sample_microseconds = [0.00003446, 0.000068985, 0.000100503, 0.000244132, 0.00031326, 0.000222142, 0.000222234,
                              0.000289743, 0.000226138, 0.000297458, 0.00034749, 0.000255601, 0.000247864, 0.00016664, 0.000246105,
                              0.000350085, 0.000331485, 0.000096794, 0.000237371, 0.000240587, 0.000112419, 0.000191173, 0.000077507,
                              0.000205043, 0.000151423]
pct25 = np.percentile(sample_microseconds, 25)
pct75 = np.percentile(sample_microseconds, 75)
iqr = pct75 - pct25
print("IQR: %d. 25th percentile: %d. 75th percentile: %d" % (iqr, pct25, pct75))
